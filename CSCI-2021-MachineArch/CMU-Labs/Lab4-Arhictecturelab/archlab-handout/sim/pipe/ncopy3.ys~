#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Nathan Comer
# ID: 5119060
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	andq %rdx,%rdx		# len <= 0?
	jle Done		# if so, goto Done:
	rrmovq %rdx, %r10
	iaddq $-3, %r10
	andq %r10, %r10
	jle LoopB

LoopA:	mrmovq (%rdi), %r10	# read val from src...
	mrmovq 0x8(%rdi), %r11
	mrmovq 0x18(%rdi), %12  
	iaddq $0x20, %rsi	# dst++
	iaddq $-3, %rdx		# len--	
	iaddq  $0x20, %rdi	# src++
	rmmovq %r10, -0x8(%rsi)		# ...and store it to dst
	rmmovq %r11, -0x18(%rsi)	# ...and store it to dst
	rmmovq %r12, -0x20(%rsi)	# ...and store it to dst
	andq %r10, %r10	# val <= 0?
	jle PosA
	iaddq $1, %rax	# Count positives in rax - count_pos++

PosA:	andq %r11, %r11	# val <= 0?
	jle PosB
	iaddq $1, %rax	# Count positives in rax - count_pos++

PosB:	andq %r12, %r12	# val <= 0?
	jle PosC
	iaddq $1, %rax	# Count positives in rax - count_pos++

PosC:	rrmovq %rdx, %r10
	iaddq $-3, %r10
	andq %r10, %r10
	jg LoopA
	andq %rdx, %rdx
	jle Rest

LoopB:	mrmovq (%rdi), %r10	# read val from src...
	iaddq $8, %rsi		# dst++
	iaddq $-1, %rdx		# len--
	iaddq $8, %rdi		# src++
	rmmovq %r10, -8(%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Rest		# if so, goto Npos: 
	iaddq $1, %rax		# Count positives in rax - count_pos++
	andq %rdx,%rdx		# len > 0?
	jg LoopB		# if so, goto LoopB:
Rest:
	

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
