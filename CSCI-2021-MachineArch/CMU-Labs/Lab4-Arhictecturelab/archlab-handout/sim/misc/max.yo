                            | # Nathan Comer
                            | # ID: 5119060
                            | 
0x000:                      | .pos 0
0x000:                      | init:   
0x000: 30f40002000000000000 |         irmovq Stack, %rsp	#Set up stack frame
0x00a: 2045                 |         rrmovq %rsp, %rbp
0x00c: 805800000000000000   |         call Main
0x015: 00                   |         halt
                            | 
                            | 
0x018:                      |         .align 4
0x018:                      | ele1:
0x018: 0a00000000000000     |         .quad 0x00a
0x020: 2800000000000000     |         .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |         .quad 0x0b0
0x030: 3800000000000000     |         .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |         .quad 0xc00
0x040: 4800000000000000     |         .quad ele4
0x048:                      | ele4:
0x048: 0cd0000000000000     | 	.quad 0xd00c
0x050: 0000000000000000     | 	.quad 0
                            | 
0x058:                      | Main:   
0x058: a05f                 |         pushq %rbp
0x05a: 2045                 |         rrmovq %rsp,%rbp
0x05c: 30f71800000000000000 | 	irmovq ele1, %rdi
0x066: 807400000000000000   | 	call max_list
0x06f: 2054                 | 	rrmovq %rbp, %rsp
0x071: b05f                 | 	popq %rbp
0x073: 90                   | 	ret
                            | 
0x074:                      | max_list:
0x074: a0af                 | 	pushq %r10		#save register value
0x076: 50070000000000000000 | 	mrmovq (%rdi), %rax	#set initial max value
0x080: 70a400000000000000   | 	jmp notg
0x089: 50170000000000000000 | Loop:	mrmovq (%rdi), %rcx	#nodes
0x093: 200a                 | 	rrmovq %rax, %r10
0x095: 611a                 | 	subq %rcx, %r10		#compare current node value to greatest value
0x097: 62aa                 | 	andq %r10, %r10
0x099: 75a400000000000000   | 	jge notg		#jump if current node < greatest value
0x0a2: 2010                 | 	rrmovq %rcx, %rax	#mov current node's value to greatest
                            | 
0x0a4: 50770800000000000000 | notg:	mrmovq 0x8(%rdi), %rdi 	#mov to next node
0x0ae: 6277                 | 	andq %rdi, %rdi 	#if address in node points 0 than end
0x0b0: 73c200000000000000   | 	je End
0x0b9: 708900000000000000   | 	jmp Loop
                            | 
0x0c2: b0af                 | End:	popq %r10		#restore register value
0x0c4: 90                   | 	ret
                            | 	
0x200:                      | 	.pos 0x200
0x200:                      | Stack:
                            | 
                            | 
